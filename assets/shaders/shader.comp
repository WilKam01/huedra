#version 450

layout(set = 0, binding = 0) uniform sampler2D gPosition;
layout(set = 0, binding = 1) uniform sampler2D gNormal;
layout(set = 0, binding = 2) uniform sampler2D gAlbedo;

layout(set = 0, binding = 3) uniform Light {
    vec4 lightPosition;
    vec4 lightColor;
};

layout(set = 0, binding = 4, rgba8) uniform writeonly image2D outImage;

layout(local_size_x = 32, local_size_y = 32) in;

void main() {
    
    ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);

    vec3 fragPosition = texelFetch(gPosition, pixelCoords, 0).rgb;
    vec3 fragNormal = normalize(texelFetch(gNormal, pixelCoords, 0).rgb);
    vec3 albedo = texelFetch(gAlbedo, pixelCoords, 0).rgb;

    vec3 lightDir = normalize(lightPosition.xyz - fragPosition);
    float diff = max(dot(fragNormal, lightDir), 0.0);
    vec3 diffuse = diff * lightColor.rgb * albedo * lightColor.a;

    vec3 ambient = 0.2 * albedo;

    vec3 finalColor = ambient + diffuse;
    imageStore(outImage, pixelCoords, vec4(finalColor, 1.0));
}